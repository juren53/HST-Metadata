#!/usr/bin/python3
#---------------------write-tags-from-csv.py-------------------------------
# This code writes HSTL IPTC tags to all TIFF files listed in a CSV file
# generated by HST PDB.
# The first row of the downloaded CSV [headers] must be edited to
# match the IPTC labels used below.  e.g Credit, By-line, SpecialInstructions,
# Objectname, Writer-Editor, Source, Headline and Caption-Abstract.
#
#
# Created Sat 17 Jun 2023 03:34:20 AM CDT by JAU
# Updated Mon 26 Jun 2023 12:30:58 PM CDT  Added error trap for missing TIFF from CSV file\
# Updated Wed 05 Jul 2023 20:20:58 PM CDT  Added date conversion routine and Date-Created tag
#----------------------------------------------------------------

import csv
import exiftool
import os
import re
import datetime as dt

cwd = os.getcwd()  # Gets current working directory

directory = os.getcwd()  # Sets the working directory

# Clear the screen
os.system('cls' if os.name == 'nt' else 'clear')

# Print a message
print("write-tags-from-csv.py ver 0.3  updated Wed 05 Jul 2023 20:20:58 PM CDT")
print(" ")
print("This program embeds IPTC tags into TIFF files listed in a CSV file generated from the HST PDB.")
print("It requires this Python program to be in the same directory with CSV file and all the TIFFs ")
print("listed in the CSV file.")
print(" ")
print("Press Enter to continue...")

# Wait for the space bar to be pressed
input()

with open("sample-tiffs.csv", newline='') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        filename = f"{row['ObjectName']}.tif"
        file_path = os.path.join(directory, filename)  # Construct the full file path
        if not os.path.isfile(file_path):
            print(f"***** File {filename} not found in directory {directory} ********")
            continue
        print(filename)

        # Date Conversion Routine
        def convert_date(date_str):
            # Conversion logic

        date_str = row["SpecialInstructions"]
        print("Date Created: ", convert_date(date_str))

        Date = convert_date(date_str)

        with exiftool.ExifTool() as et:
            # Exiftool commands

            et.execute(b"-DateCreated=" + Date.encode('utf-8'), file_path.encode('utf-8'))

# Processing complete
print("Processing complete")

